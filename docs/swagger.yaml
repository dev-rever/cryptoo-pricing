openapi: 3.0.0
info:
  title: Cryptoo-pricing API
  description: |
    This API provides cryptocurrency pricing data and allows order creation.
  version: 1.0.0
  contact:
    name: rever-chen dev
    email: rever.developer@gmail.com
    url: http://cryptoo-pricing.com

servers:
  - url: http://cryptoo-pricing.com

tags:
  - name: Crypto
    description: Crypto pricing endpoints
  - name: User
    description: Member system endpoints

paths:

### User
  /user/register:
    post:
      tags:
        - User
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequest'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegisterResponse'
        '400':
          description: Invalid input
        '409':
          description: Repeat registered
        '500':
          description: Server error
  /user/login:
    post:
      tags:
        - User
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLoginResponse'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
  /user/profile:
    get:
      tags:
        - User
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

### Crypto
  /crypto/supcurrencies:
    get:
      tags:
        - Crypto
      summary: Get supported cryptocurrencies
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of supported currencies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupCurrenciesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /crypto/queries:
    get:
      tags:
        - Crypto
      summary: Query crypto price information
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: coinName
          required: true
          schema:
            type: string
          description: The full name of the coin (e.g., bitcoin, ethereum)
        - in: query
          name: blur
          required: false
          schema:
            type: boolean
          description: Whether to blur search (true/false)
      responses:
        '200':
          description: Price query successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoQueryResponse'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /crypto/price:
    get:
      tags:
        - Crypto
      summary: Get current price and market info of specified coins
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: currencies
          required: true
          schema:
            type: string
            example: usd,twd
          description: Comma-separated list of currency codes (e.g., usd, twd), comma-separated if querying more than 1 currency.
        - in: query
          name: coinIDs
          required: true
          schema:
            type: string
            example: bitcoin,eth
          description: Comma-separated list of coin IDs (e.g., bitcoin, eth), comma-separated if querying more than 1 coin.
      responses:
        '200':
          description: Price and market data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CryptoPriceResponse'
        '400':
          description: Invalid input
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          example: 1
        message:
          type: string
          example: Invalid token
### User
    UserRegisterRequest:
      type: object
      required:
        - account
        - password
        - email
      properties:
        account:
          type: string
          example: account
        password:
          type: string
          format: password
          example: password
        email:
          type: string
          format: email
          example: exanple@email.com

    UserLoginRequest:
      type: object
      required:
        - account
        - password
      properties:
        account:
          type: string
          example: account
        password:
          type: string
          format: password
          example: password

    UserRegisterResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: user registered successfully
        data:
          type: object
          properties:
            account:
              type: string
              example: account
            email:
              type: string
              example: example@email.com
            token:
              type: string
              description: JWT token
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

    UserLoginResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: user registered successfully
        data:
          type: object
          properties:
            token:
              type: string
              description: JWT token
              example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

    UserProfileResponse:
      type: object
      properties:
        account:
          type: string
          example: account
        email:
          type: string
          format: email
          example: example@email.com
        uid:
          type: integer
          example: 1

### Crypto
    SupCurrenciesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: success
        data:
          type: array
          items:
            type: string
          example:
            - btc
            - eth
            - ltc
            - bch
            - bnb
            - ...

    CryptoQueryResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: success
        data:
          type: object
          properties:
            coins:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                    example: bitcoin
                  name:
                    type: string
                    example: Bitcoin
                  api_symbol:
                    type: string
                    example: bitcoin
                  symbol:
                    type: string
                    example: BTC
                  thumb:
                    type: string
                    format: uri
                    example: https://coin-images.coingecko.com/coins/images/1/thumb/bitcoin.png
                  large:
                    type: string
                    format: uri
                    example: https://coin-images.coingecko.com/coins/images/1/large/bitcoin.png

    CryptoPriceResponse:
      type: object
      properties:
        code:
          type: integer
          example: 0
        message:
          type: string
          example: success
        data:
          type: object
          additionalProperties:
            type: object
            properties:
              last_updated_at:
                type: integer
                format: int64
                description: Unix timestamp
                example: 1746448800
              twd:
                type: number
                format: float
                example: 2745102.2
              twd_24h_change:
                type: number
                format: float
                example: -6.392988
              twd_24h_vol:
                type: number
                format: float
                example: 568914100000
              twd_market_cap:
                type: number
                format: float
                example: 54363037000000
              usd:
                type: number
                format: float
                example: 94292.09
              usd_24h_change:
                type: number
                format: float
                example: -1.2389798
              usd_24h_vol:
                type: number
                format: float
                example: 19541750000
              usd_market_cap:
                type: number
                format: float
                example: 1872392200000
